# Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

executor: slurm

containers:
  trtllm: nvcr.io/nvidia/tensorrt-llm/release:0.21.0
  vllm: igitman/nemo-skills-vllm:0.7.0
  sglang: igitman/nemo-skills-sglang:0.7.0
  nemo: igitman/nemo-skills-nemo:0.7.0
  megatron: igitman/nemo-skills-megatron:0.7.0
  sandbox: igitman/nemo-skills-sandbox:0.7.0
  nemo-skills: igitman/nemo-skills:0.7.0
  verl: igitman/nemo-skills-verl:0.7.0
  nemo-rl: igitman/nemo-skills-nemo-rl:0.7.0

job_name_prefix: "nemo_skills:"


# define this for ssh access
# ssh_tunnel:
#   host: <slurm host>
#   user: <username>
#   job_dir: <some location on slurm cluster to keep job metadata, uploaded code and generated sbatch files>
#   identity: <can specify ssh key to avoid entering password>


# if you're running directly from cluster, you only need to define job_dir and shouldn't use ssh_tunnel
# job_dir: <some location on slurm cluster to keep job metadata, uploaded code and generated sbatch files>


# define your account/partition here
# account: <slurm account>
# partition: <slurm partition>
# cpu_partition: <if cluster has a dedicated cpu partition, you can define it here>


# add required mounts for models/data here
# the code is mounted automatically inside /nemo_run/code
# but please note that we only package what's tracked by git + jsonl files inside nemo_skills/dataset

# mounts:
#   - <slurm location for your data/models>:<where to mount in a container>
#   e.g.
#   - <path on slurm>/trt_models:/trt_models
#   - <path on slurm>/data:/data
#   you can also override container libraries by directly mounting over them. E.g. to override NeMo-Aligner do
#   - <path on slurm>/NeMo-Aligner:/opt/NeMo-Aligner


# can use this section to set timeouts for different partitions
# this will be used as a slurm parameter + to signal SFT job to finish
# before the timeout to have time to save the last checkpoint
# timeouts:
#   partition_name1: 06:00:00
#   partition_name2: 01:30:00
